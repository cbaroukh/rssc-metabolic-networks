#FBAAnalysis folder
This folder contains script related to FBA analysis and GDS analysis performed on the metabolic network of 11 strains of the RSSC.
Please cite Baroukh et al. 2023 (https://doi.org/10.1101/2023.01.09.523232) if using metabolic networks or scripts.

Scripts were runned using python and the following versions of the librairies:
- python 3.6
- pandas 1.1.5
- openpyxl 2.5.9
- cplex 12.8.0.0


#input folder
- meroom_results : contains all results generated by the meroom pipeline.
Please see https://lipm-gitlab.toulouse.inra.fr/LIPM-BIOINFO/meroom-singularity for more information.
- FBAFunctionnalMetabolicNetworks
Contains in .tsv format all metabolic networks of all strains functionnal for FBA.
Please not that GMI1000.tsv is the metabolic network of GMI1000 from Peyraud et al. 2016.
GMI1000_2.tsv is the metabolic network automatically reconstructed by meroom pipeline.

#ouput folder
- FBA : Flux Balance Analysis simulation results for a given strain.
- GDS : Gene Deletion Study simulation results for a given strain and an Excel file compiling results of all strains.
- LP : .lp files containing LP optimization problem solved for FBA.
- parsednetworks : .txt files containing all information of a given metabolic network such as the stoichiometric matrix, the metabolites ids and names, the reactions ids and names and reversibility, ...

#parser_tsv.py
Parse the .tsv metabolic network of a given strain. Output files are .txt files in output/parsednetworks/
Necessary to perform FBA or GDS.

#FBA.py
Perform Flux Balance Analysis on a given strain. Output files is an Excel file in output/FBA/
The LP problem can be seen in .lp format in folder output/LP/
Strain is to be chosen in parser_tsv.py with the variable strain_name.

#GDS.py
Perform Gene Deletion Study for a given strain. Output file is an Excel file in output/GDS/
Strain is to be chosen in parser_tsv.py with the variable strain_name.
Genes not names "RSXXXX" are ignored.
Genes are assumed essential if FBA_status is different from 1 or FBA_status = 1 and FBA_value < 1E-5.

#AnalyseGDS.py
Compile all GDS results from all strains.
This script functions only if GDS results were generated for all strains listed in list strains.
Results are given by an Excel file compiling all results FBA values.
Genes are assumed essential if FBA_status is different from 1 or FBA_status = 1 and FBA_value < 1E-5.




